@using Microsoft.FluentUI.AspNetCore.Components.Icons.Regular
@using Size24 = Microsoft.FluentUI.AspNetCore.Components.Icons.Color.Size24
@inject Settings Settings

<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon"/>
    <label for="navmenu-toggle" class="navmenu-icon">
        <FluentIcon Value="@(new Size20.Navigation())" Color="Color.Fill"/>
    </label>
    <nav class="sitenav" aria-labelledby="main-menu">
        <FluentNavMenu Id="main-menu" Width="280" Collapsible="false" Title="Navigation menu" @bind-Expanded:get="_expanded" @bind-Expanded:set="HandleSetExpanded" CustomToggle="true">
            <FluentNavLink Tooltip="Home" Href="/" Match="NavLinkMatch.All" Icon="@(new Size24.Home())" IconColor="Color.Accent">Home</FluentNavLink>
            <FluentNavLink Tooltip="Auctions" Href="/auctions" Icon="@(new Size24.ClipboardTextEdit())" IconColor="Color.Accent">Auctions</FluentNavLink>
            <FluentNavLink Tooltip="Previous" Href="/previous" Icon="@(new Size24.QuestionCircle())" IconColor="Color.Accent">Previous</FluentNavLink>
            <FluentNavLink Tooltip="Investments" Href="/investments" Icon="@(new Size24.ArrowTrendingLines())" IconColor="Color.Accent">Investments</FluentNavLink>
            <FluentNavLink Tooltip="Demo" Href="/demo" Icon="@(new Size24.Beach())" IconColor="Color.Accent">Demo</FluentNavLink>
            <FluentNavLink Tooltip="Agent" Href="/agent" Icon="@(new Size24.Headset())" IconColor="Color.Accent">Agent</FluentNavLink>
        </FluentNavMenu>
    </nav>
</div>

@code {
    private bool _expanded = true;

    // protected override void OnInitialized()
    // {
    //     _expanded = Settings.IsNavExpanded;
    // }

    private void HandleSetExpanded(bool val)
    {
        // _expanded = val;
        // Settings.IsNavExpanded = val;
        // InvokeAsync(() => { Settings.Save(); });
    }

}