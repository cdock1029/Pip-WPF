@page "/agent"
@using DevExpress.AIIntegration.Blazor.Chat
@using Markdig
@using Microsoft.Extensions.AI
@using ChatCompletion = Microsoft.Extensions.AI.ChatCompletion

@inject IChatClient Client

<PageTitle>Agent</PageTitle>


<div class="flex h-full flex-col">

    <DxAIChat CssClass="h-[1px] flex-1" UseStreaming="true" Initialized="Initialized" ResponseContentFormat="ResponseContentFormat.Markdown">
        <MessageContentTemplate>
            @ToHtml(context.Content)
        </MessageContentTemplate>
    </DxAIChat>

    <div class="m-8">
        <button @onclick="HandleClick">Test</button>
    </div>
</div>

@code {

    private const string SystemPrompt =
        """
         You're a financial support agent that can provide information on US treasuries, the user's personal investment portfolio of saved treasuries, and other assorted financial knowlege and info.
         Be succint, clear, call functions available to you as needed. Show internal database ID's when displaying results, so user can modify entries.
        """;

    IEnumerable<BlazorChatMessage> _messages = [new(ChatRole.System, SystemPrompt)];


    void Initialized(IAIChat chat)
    {
        chat.LoadMessages(_messages);
        _messages = chat.SaveMessages();
    }

    static MarkupString ToHtml(string text)
    {
        return (MarkupString)Markdown.ToHtml(text);
    }

    private async Task HandleClick()
    {
        ChatCompletion result = await Client.CompleteAsync("Who are you?");

        Debug.WriteLine($"Chat result: {result.Message.Text}");
    }

}