@page "/previous"
@rendermode InteractiveWebAssembly
@inject ITreasuryDataProvider TreasuryDataProvider

<div class="investments-container" style="height:100%;display:flex;flex-direction:column;">
    <FluentLabel Class="page-title" Typo="Typography.PageTitle" MarginBlock="default">
        Previous Auctions
    </FluentLabel>

     <DxGrid
        Id="previous-auctions-grid"
        KeyFieldNames="[nameof(Treasury.Cusip), nameof(Treasury.IssueDate)]"
        Data="_treasuries"
        CssClass="flex h-px flex-auto"
        SizeMode="SizeMode.Small"
        ShowGroupPanel="true"
        ShowFilterRow="false"
        ShowSearchBox="true"
        AutoExpandAllGroupRows="false"
        ShowAllRows="true"
        ColumnResizeMode="GridColumnResizeMode.NextColumn"
        TextWrapEnabled="true"
        CustomSort="OnCustomSort"
        VirtualScrollingEnabled="true">
        <Columns>
            <DxGridDataColumn FieldName="@nameof(Treasury.AnnouncementDate)" DisplayFormat="yyyy-MM-d" SortOrder="GridColumnSortOrder.Descending" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.AuctionDate)" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.Cusip)" Name="CUSIP" MinWidth="50" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.Type)" GroupIndex="0" MinWidth="50" DataRowEditorVisible="false" SortMode="GridColumnSortMode.Value"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.IssueDate)" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.MaturityDate)" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.SecurityTerm)" GroupIndex="1" MinWidth="100" DataRowEditorVisible="false" SortMode="GridColumnSortMode.Custom"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.SecurityType)" MinWidth="100" DataRowEditorVisible="false" SortMode="GridColumnSortMode.Value"/>
            <DxGridBandColumn Caption="Announcement">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameAnnouncement)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn FieldName="@nameof(Treasury.XmlFilenameAnnouncement)" Caption="XML">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/xml/{(string)context.Value}")"
                                    target="_blank">
                                    <span>XML</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
            <DxGridBandColumn Caption="Noncomp Results">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameNoncompetitiveResults)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
            <DxGridBandColumn Caption="Competitive Results">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameCompetitiveResults)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn FieldName="@nameof(Treasury.XmlFilenameCompetitiveResults)" Caption="XML">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/xml/{(string)context.Value}")"
                                    target="_blank">
                                    <span>XML</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
            <DxGridBandColumn Caption="Special Announcement">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameSpecialAnnouncement)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
        </Columns>
        <ToolbarTemplate>
            <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained">
                <Items>
                    <DxToolbarItem BeginGroup="true" Alignment="ToolbarItemAlignment.Left">
                        <Template Context="toolbar_item_context">
                            <div class="flex h-full items-center">
                                <div class="mr-2">Year:</div>
                                <DxComboBox
                                    Context="comboContext"
                                    Data="Years"
                                    @bind-Value="SelectedYear"
                                    SelectedItemChanged="(int year) => Load(year)"
                                    NullText="Select Year"/>
                            </div>
                        </Template>
                    </DxToolbarItem>
                </Items>
            </DxToolbar>
        </ToolbarTemplate>
    </DxGrid>

    <DxLoadingPanel @bind-Visible="@_isLoading"
                    PositionTarget="#previous-auctions-grid"
                    IsContentBlocked="true"
                    ApplyBackgroundShading="true"
                    IndicatorAreaVisible="false"
                    Text="Fetching Data..."/>


</div>

@code {

    bool _isLoading;

    public List<int> Years { get; } = Enumerable.Range(1997, DateTime.Now.Year - 1997 + 1).Reverse().ToList();

    public int? SelectedYear { get; set; }

    List<Treasury>? _treasuries;



    async Task Load(int year)
    {
        //if (SelectedYear is null) return;

        Console.WriteLine($"Load year: {year}, selected: {SelectedYear}");

        await InvokeAsync(() =>
        {
            _treasuries = null;
            _isLoading = true;
            StateHasChanged();
        });


        DateOnly start = new(year, 1, 1);
        DateOnly end = new(year, 12, 31);

        IEnumerable<Treasury>? data = await TreasuryDataProvider.AnnouncementsResultsSearch(start, end);

        await InvokeAsync(() =>
        {
            _treasuries = data?.ToList();
            _isLoading = false;
            StateHasChanged();
        });
    }

    private static void OnCustomSort(GridCustomSortEventArgs e)
    {
        switch (e.FieldName)
        {
            case nameof(Treasury.SecurityTerm):
            {
                Treasury? t1 = (Treasury)e.DataItem1;
                Treasury? t2 = (Treasury)e.DataItem2;

                e.Result = t1.CompareTerm(t2);
                e.Handled = true;
                break;
            }
        }
    }
}