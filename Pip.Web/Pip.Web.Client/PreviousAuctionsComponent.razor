
@* <div class="mb-8 w-72 self-end">
    <DxComboBox Data="Years" @bind-Value="SelectedYear" NullText="Select Year"/>
</div> *@
    <input type="hidden" name="Model.SelectedYear" value="@SelectedYear"/>
    <DxGrid
        Id="previous-auctions-grid"
        Data="Treasuries"
        CssClass="flex h-px flex-auto"
        SizeMode="SizeMode.Small"
        ShowGroupPanel="true"
        ShowFilterRow="false"
        ShowSearchBox="true"
        AutoExpandAllGroupRows="false"
        ShowAllRows="true"
        ColumnResizeMode="GridColumnResizeMode.NextColumn"
        TextWrapEnabled="true"
        CustomSort="OnCustomSort"
        VirtualScrollingEnabled="true">
        <Columns>
            <DxGridDataColumn FieldName="@nameof(Treasury.AnnouncementDate)" DisplayFormat="yyyy-MM-d" SortOrder="GridColumnSortOrder.Descending" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.AuctionDate)" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.Cusip)" Name="CUSIP" MinWidth="50" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.Type)" GroupIndex="0" MinWidth="50" DataRowEditorVisible="false" SortMode="GridColumnSortMode.Value"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.IssueDate)" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.MaturityDate)" MinWidth="100" DataRowEditorVisible="false"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.SecurityTerm)" GroupIndex="1" MinWidth="100" DataRowEditorVisible="false" SortMode="GridColumnSortMode.Custom"/>
            <DxGridDataColumn FieldName="@nameof(Treasury.SecurityType)" MinWidth="100" DataRowEditorVisible="false" SortMode="GridColumnSortMode.Value"/>
            <DxGridBandColumn Caption="Announcement">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameAnnouncement)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn FieldName="@nameof(Treasury.XmlFilenameAnnouncement)" Caption="XML">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/xml/{(string)context.Value}")"
                                    target="_blank">
                                    <span>XML</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
            <DxGridBandColumn Caption="Noncomp Results">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameNoncompetitiveResults)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
            <DxGridBandColumn Caption="Competitive Results">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameCompetitiveResults)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn FieldName="@nameof(Treasury.XmlFilenameCompetitiveResults)" Caption="XML">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/xml/{(string)context.Value}")"
                                    target="_blank">
                                    <span>XML</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
            <DxGridBandColumn Caption="Special Announcement">
                <Columns>
                    <DxGridDataColumn FieldName="@nameof(Treasury.PdfFilenameSpecialAnnouncement)" Caption="PDF">
                        <CellDisplayTemplate>
                            @if (!string.IsNullOrEmpty((string)context.Value))
                            {
                                <a
                                    class="inline-flex items-center px-1"
                                    href="@($"https://www.treasurydirect.gov/instit/annceresult/press/preanre/{SelectedYear}/{(string)context.Value}")"
                                    target="_blank">
                                    <span>PDF</span>
                                </a>
                            }
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </DxGridBandColumn>
        </Columns>
        <ToolbarTemplate>
            <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained">
                <Items>
                    <DxToolbarItem BeginGroup="true" Alignment="ToolbarItemAlignment.Left">
                        <Template Context="toolbar_item_context">
                            <div class="flex h-full items-center">
                                <div class="mr-2">Year:</div>
                                <DxComboBox Context="comboContext" Data="Years" @bind-Value="SelectedYear" SelectedItemChanged="(int year) => HandleComboChanged()" NullText="Select Year"/>
                                @*<DxComboBox Data="Years" @bind-Value="Model.SelectedYear" SelectedItemChanged="@((Year year) => OnSelectedYearChanged(year))"/>*@                            
                                <DxButton
                                    @ref="_submitButtonRef"
                                    Context="submitButtonContext"
                                    SubmitFormOnClick="true"
                                    CssClass="hidden! ml-8" RenderStyle="ButtonRenderStyle.Primary"
                                    RenderStyleMode="ButtonRenderStyleMode.Contained">
                                    Submit
                                </DxButton>
                            </div>
                        </Template>
                    </DxToolbarItem>
                </Items>
            </DxToolbar>
        </ToolbarTemplate>
    </DxGrid>

    <DxLoadingPanel @bind-Visible="@IsLoading"
                    PositionTarget="#previous-auctions-grid"
                    IsContentBlocked="true"
                    ApplyBackgroundShading="true"
                    IndicatorAreaVisible="false"
                    Text="Fetching Data..."/>



@code
{


    [Parameter] public List<Treasury>? Treasuries { get; set; }

    [Parameter] public int? SelectedYear { get; set; }

    [Parameter] public required List<int> Years { get; set; }

    bool IsLoading { get; set; }

    DxButton? _submitButtonRef;


    //TODO: fix something wrong with custom sort first rows
    private static void OnCustomSort(GridCustomSortEventArgs e)
    {
        switch (e.FieldName)
        {
            case nameof(Treasury.SecurityTerm):
            {
                Treasury? t1 = (Treasury)e.DataItem1;
                Treasury? t2 = (Treasury)e.DataItem2;

                e.Result = t1.CompareTerm(t2);
                e.Handled = true;
                break;
            }
        }
    }

    // public class Year(int value)
    // {
    //     public int Value => value;
    //     public YearRange Range { get; } = new(new DateOnly(value, 1, 1), new DateOnly(value, 12, 31));

    //     public DateOnly Start { get; set; }
    //     public DateOnly End { get; set; }

    //     public string Text { get; } = value.ToString();

    //     public record YearRange(DateOnly Start, DateOnly End);
    // }

    private void HandleComboChanged()
    {
        _submitButtonRef?.Click.InvokeAsync();
    }
}