<UserControl
    x:Class="Pip.UI.Components.Search.SearchView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:search="clr-namespace:Pip.UI.Components.Search"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:model="clr-namespace:Pip.Model;assembly=Pip.Model"
    x:Name="SearchViewControl"
    d:DataContext="{d:DesignInstance Type=search:SearchViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <!-- DataTemplate for ListBox item to render Treasury model -->
        <DataTemplate DataType="{x:Type model:Treasury}">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Margin" Value="0,0,15,0" />
                        <Setter Property="FontFamily" Value="Consolas" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="FontSize" Value="13" />
                    </Style>
                    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="Margin" Value="0,0,15,0" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Content="Cusip" />
                <Label Grid.Column="1" Grid.Row="0" Content="Issue date" />
                <Label Grid.Column="2" Grid.Row="0" Content="Term" />
                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Cusip}" />
                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding IssueDate, StringFormat='dd MMM yyyy'}" />
                <TextBlock Grid.Column="2" Grid.Row="1" Text="{Binding SecurityTerm}" />
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!-- Search Input and Clear Button -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="4">
            <TextBox
                Width="100"
                Margin="0,0,5,0"
                Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding
                        Key="Return"
                        Command="{Binding SearchCommand}" />
                </TextBox.InputBindings>
            </TextBox>
            <!--<Button
                Command="{Binding ClearResultsCommand}"
                Content="Clear" />-->
        </StackPanel>

        <!-- Search Results ListBox -->
        <ListBox
            x:Name="SearchList"
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            VerticalAlignment="Stretch"
            ItemsSource="{Binding SearchResults}" SelectionMode="Single">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:EventToCommand EventName="SelectionChanged"
                                       Command="{Binding DetailsViewModel.HandleSelectionChangedCommand}"
                                       CommandParameter="{Binding SelectedItem, ElementName=SearchList}" />
            </dxmvvm:Interaction.Behaviors>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <!--
                    PlacementTarget is unknown at compile time. At runtime it will refer to the element where the ContextMenu is rendered upon, which will be the ListBox.
                    If we try to de-reference SelectedItem from PlacementTarget, Intellisense will show a warning in the editor. `PlacementTarget.(ListBox.SelectedItem)` removes
                    this warning.
                    -->
                    <MenuItem
                        Command="{Binding CreateInvestmentCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListBox.SelectedItem)}"
                        Header="Create investment" />
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.Style>
                <Style TargetType="{x:Type ListBox}">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>
        </ListBox>
    </Grid>
</UserControl>