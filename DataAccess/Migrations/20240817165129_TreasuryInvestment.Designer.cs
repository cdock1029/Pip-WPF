// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pip.DataAccess;

#nullable disable

namespace Pip.DataAccess.Migrations
{
    [DbContext(typeof(PipDbContext))]
    [Migration("20240817165129_TreasuryInvestment")]
    partial class TreasuryInvestment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Pip.Model.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Confirmation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Par")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reinvestments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TreasuryCusip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("TreasuryIssueDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TreasuryCusip", "TreasuryIssueDate");

                    b.ToTable("Investment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Confirmation = "FOO",
                            Par = 100000,
                            Reinvestments = 0,
                            TreasuryCusip = "912797GL5",
                            TreasuryIssueDate = new DateOnly(2024, 7, 25)
                        },
                        new
                        {
                            Id = 2,
                            Confirmation = "BAR",
                            Par = 55000,
                            Reinvestments = 0,
                            TreasuryCusip = "912797KX4",
                            TreasuryIssueDate = new DateOnly(2024, 6, 18)
                        },
                        new
                        {
                            Id = 3,
                            Confirmation = "BAZ",
                            Par = 2000400,
                            Reinvestments = 0,
                            TreasuryCusip = "912797GK7",
                            TreasuryIssueDate = new DateOnly(2024, 5, 9)
                        });
                });

            modelBuilder.Entity("Pip.Model.Treasury", b =>
                {
                    b.Property<string>("Cusip")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cusip");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "issueDate");

                    b.Property<string>("AccruedInterestPer100")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "accruedInterestPer100");

                    b.Property<string>("AccruedInterestPer1000")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "accruedInterestPer1000");

                    b.Property<string>("AdjustedAccruedInterestPer1000")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "adjustedAccruedInterestPer1000");

                    b.Property<string>("AdjustedPrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "adjustedPrice");

                    b.Property<string>("AllocationPercentage")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "allocationPercentage");

                    b.Property<string>("AllocationPercentageDecimals")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "allocationPercentageDecimals");

                    b.Property<string>("AnnouncedCusip")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "announcedCusip");

                    b.Property<DateOnly?>("AnnouncementDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "announcementDate");

                    b.Property<DateOnly?>("AuctionDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "auctionDate");

                    b.Property<string>("AuctionDateYear")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "auctionDateYear");

                    b.Property<string>("AuctionFormat")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "auctionFormat");

                    b.Property<string>("AverageMedianDiscountMargin")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "averageMedianDiscountMargin");

                    b.Property<string>("AverageMedianDiscountRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "averageMedianDiscountRate");

                    b.Property<string>("AverageMedianInvestmentRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "averageMedianInvestmentRate");

                    b.Property<string>("AverageMedianPrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "averageMedianPrice");

                    b.Property<string>("AverageMedianYield")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "averageMedianYield");

                    b.Property<string>("BackDated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "backDated");

                    b.Property<DateOnly?>("BackDatedDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "backDatedDate");

                    b.Property<string>("BidToCoverRatio")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "bidToCoverRatio");

                    b.Property<DateOnly?>("CallDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "callDate");

                    b.Property<string>("Callable")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "callable");

                    b.Property<DateOnly?>("CalledDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "calledDate");

                    b.Property<string>("CashManagementBillCMB")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cashManagementBillCMB");

                    b.Property<string>("ClosingTimeCompetitive")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "closingTimeCompetitive");

                    b.Property<string>("ClosingTimeNoncompetitive")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "closingTimeNoncompetitive");

                    b.Property<string>("CompetitiveAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "competitiveAccepted");

                    b.Property<string>("CompetitiveBidDecimals")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "competitiveBidDecimals");

                    b.Property<string>("CompetitiveTendered")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "competitiveTendered");

                    b.Property<string>("CompetitiveTendersAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "competitiveTendersAccepted");

                    b.Property<string>("CorpusCusip")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "corpusCusip");

                    b.Property<string>("CpiBaseReferencePeriod")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cpiBaseReferencePeriod");

                    b.Property<string>("CurrentlyOutstanding")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "currentlyOutstanding");

                    b.Property<DateOnly?>("DatedDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "datedDate");

                    b.Property<string>("DirectBidderAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "directBidderAccepted");

                    b.Property<string>("DirectBidderTendered")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "directBidderTendered");

                    b.Property<string>("EstimatedAmountOfPubliclyHeldMaturingSecuritiesByType")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "estimatedAmountOfPubliclyHeldMaturingSecuritiesByType");

                    b.Property<string>("FimaIncluded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "fimaIncluded");

                    b.Property<string>("FimaNoncompetitiveAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "fimaNoncompetitiveAccepted");

                    b.Property<string>("FimaNoncompetitiveTendered")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "fimaNoncompetitiveTendered");

                    b.Property<DateOnly?>("FirstInterestPaymentDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "firstInterestPaymentDate");

                    b.Property<string>("FirstInterestPeriod")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "firstInterestPeriod");

                    b.Property<string>("FloatingRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "floatingRate");

                    b.Property<DateOnly?>("FrnIndexDeterminationDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "frnIndexDeterminationDate");

                    b.Property<string>("FrnIndexDeterminationRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "frnIndexDeterminationRate");

                    b.Property<string>("HighDiscountMargin")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "highDiscountMargin");

                    b.Property<string>("HighDiscountRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "highDiscountRate");

                    b.Property<string>("HighInvestmentRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "highInvestmentRate");

                    b.Property<string>("HighPrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "highPrice");

                    b.Property<string>("HighYield")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "highYield");

                    b.Property<string>("IndexRatioOnIssueDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "indexRatioOnIssueDate");

                    b.Property<string>("IndirectBidderAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "indirectBidderAccepted");

                    b.Property<string>("IndirectBidderTendered")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "indirectBidderTendered");

                    b.Property<string>("InterestPaymentFrequency")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "interestPaymentFrequency");

                    b.Property<string>("InterestRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "interestRate");

                    b.Property<string>("LowDiscountMargin")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "lowDiscountMargin");

                    b.Property<string>("LowDiscountRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "lowDiscountRate");

                    b.Property<string>("LowInvestmentRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "lowInvestmentRate");

                    b.Property<string>("LowPrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "lowPrice");

                    b.Property<string>("LowYield")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "lowYield");

                    b.Property<DateOnly?>("MaturingDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "maturingDate");

                    b.Property<DateOnly?>("MaturityDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "maturityDate");

                    b.Property<string>("MaximumCompetitiveAward")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "maximumCompetitiveAward");

                    b.Property<string>("MaximumNoncompetitiveAward")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "maximumNoncompetitiveAward");

                    b.Property<string>("MaximumSingleBid")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "maximumSingleBid");

                    b.Property<string>("MinimumBidAmount")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "minimumBidAmount");

                    b.Property<string>("MinimumStripAmount")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "minimumStripAmount");

                    b.Property<string>("MinimumToIssue")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "minimumToIssue");

                    b.Property<string>("MultiplesToBid")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "multiplesToBid");

                    b.Property<string>("MultiplesToIssue")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "multiplesToIssue");

                    b.Property<string>("NlpExclusionAmount")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "nlpExclusionAmount");

                    b.Property<string>("NlpReportingThreshold")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "nlpReportingThreshold");

                    b.Property<string>("NoncompetitiveAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "noncompetitiveAccepted");

                    b.Property<string>("NoncompetitiveTendersAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "noncompetitiveTendersAccepted");

                    b.Property<string>("OfferingAmount")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "offeringAmount");

                    b.Property<string>("OriginalCusip")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "originalCusip");

                    b.Property<DateOnly?>("OriginalDatedDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "originalDatedDate");

                    b.Property<DateOnly?>("OriginalIssueDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "originalIssueDate");

                    b.Property<string>("OriginalSecurityTerm")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "originalSecurityTerm");

                    b.Property<string>("PdfFilenameAnnouncement")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pdfFilenameAnnouncement");

                    b.Property<string>("PdfFilenameCompetitiveResults")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pdfFilenameCompetitiveResults");

                    b.Property<string>("PdfFilenameNoncompetitiveResults")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pdfFilenameNoncompetitiveResults");

                    b.Property<string>("PdfFilenameSpecialAnnouncement")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pdfFilenameSpecialAnnouncement");

                    b.Property<string>("PricePer100")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pricePer100");

                    b.Property<string>("PrimaryDealerAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "primaryDealerAccepted");

                    b.Property<string>("PrimaryDealerTendered")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "primaryDealerTendered");

                    b.Property<string>("RefCPIOnDatedDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "refCPIOnDatedDate");

                    b.Property<string>("RefCpiOnIssueDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "refCpiOnIssueDate");

                    b.Property<string>("Reopening")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "reopening");

                    b.Property<string>("SecurityTerm")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "securityTerm");

                    b.Property<string>("SecurityTermDayMonth")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "securityTermDayMonth");

                    b.Property<string>("SecurityTermWeekYear")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "securityTermWeekYear");

                    b.Property<int>("SecurityType")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "securityType");

                    b.Property<string>("Series")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "series");

                    b.Property<string>("SomaAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "somaAccepted");

                    b.Property<string>("SomaHoldings")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "somaHoldings");

                    b.Property<string>("SomaIncluded")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "somaIncluded");

                    b.Property<string>("SomaTendered")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "somaTendered");

                    b.Property<string>("Spread")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "spread");

                    b.Property<string>("StandardInterestPaymentPer1000")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "standardInterestPaymentPer1000");

                    b.Property<string>("Strippable")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "strippable");

                    b.Property<string>("Term")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "term");

                    b.Property<string>("TiinConversionFactorPer1000")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "tiinConversionFactorPer1000");

                    b.Property<string>("TintCusip1")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "tintCusip1");

                    b.Property<string>("TintCusip2")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "tintCusip2");

                    b.Property<string>("Tips")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "tips");

                    b.Property<string>("TotalAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "totalAccepted");

                    b.Property<string>("TotalTendered")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "totalTendered");

                    b.Property<string>("TreasuryDirectAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "treasuryDirectAccepted");

                    b.Property<string>("TreasuryDirectTendersAccepted")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "treasuryDirectTendersAccepted");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<string>("UnadjustedAccruedInterestPer1000")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "unadjustedAccruedInterestPer1000");

                    b.Property<string>("UnadjustedPrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "unadjustedPrice");

                    b.Property<string>("XmlFilenameAnnouncement")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "xmlFilenameAnnouncement");

                    b.Property<string>("XmlFilenameCompetitiveResults")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "xmlFilenameCompetitiveResults");

                    b.HasKey("Cusip", "IssueDate");

                    b.ToTable("Treasuries");

                    b.HasData(
                        new
                        {
                            Cusip = "912797GL5",
                            IssueDate = new DateOnly(2024, 7, 25),
                            MaturityDate = new DateOnly(2024, 9, 5),
                            SecurityTerm = "42-Day",
                            SecurityType = 0,
                            Type = 0
                        },
                        new
                        {
                            Cusip = "912797KX4",
                            IssueDate = new DateOnly(2024, 6, 18),
                            MaturityDate = new DateOnly(2024, 8, 13),
                            SecurityTerm = "8-Week",
                            SecurityType = 0,
                            Type = 0
                        },
                        new
                        {
                            Cusip = "912797GK7",
                            IssueDate = new DateOnly(2024, 5, 9),
                            MaturityDate = new DateOnly(2024, 8, 8),
                            SecurityTerm = "13-Week",
                            SecurityType = 0,
                            Type = 0
                        },
                        new
                        {
                            Cusip = "912797GL5",
                            IssueDate = new DateOnly(2024, 6, 6),
                            MaturityDate = new DateOnly(2024, 9, 5),
                            SecurityTerm = "13-Week",
                            SecurityType = 0,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Pip.Model.Investment", b =>
                {
                    b.HasOne("Pip.Model.Treasury", "Treasury")
                        .WithMany("Investments")
                        .HasForeignKey("TreasuryCusip", "TreasuryIssueDate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treasury");
                });

            modelBuilder.Entity("Pip.Model.Treasury", b =>
                {
                    b.Navigation("Investments");
                });
#pragma warning restore 612, 618
        }
    }
}
